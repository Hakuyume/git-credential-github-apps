name: build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt -- --check
  cargo-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy -- --deny warnings
  cargo-build:
    strategy:
      matrix:
        target:
          - linux-amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: |
          case ${{ matrix.target }} in
              linux-amd64) TARGET=x86_64-unknown-linux-musl ;;
          esac
          sudo apt-get install --no-install-recommends --yes musl-tools
          rustup target add ${TARGET}
          cargo build --release --target ${TARGET}
          install target/${TARGET}/release/git-credential-github-apps target/
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/git-credential-github-apps
  docker:
    strategy:
      matrix:
        target:
          - linux-amd64
    needs:
      - cargo-build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.target }}
      - run: |
          chmod +x git-credential-github-apps

          cat << 'EOD' > Dockerfile
          FROM alpine
          RUN apk add --no-cache ca-certificates git git-lfs
          COPY git-credential-github-apps /usr/local/bin/
          EOD
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          # https://github.com/orgs/community/discussions/25768
          tags: ghcr.io/hakuyume/git-credential-github-apps:${{ github.sha }}-${{ matrix.target }}-docker
  oras:
    if: ${{ github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        target:
          - linux-amd64
    needs:
      - cargo-build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.target }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # https://github.com/orgs/community/discussions/25768
      - run: oras push ghcr.io/hakuyume/git-credential-github-apps:${{ github.sha }}-${{ matrix.target }}-oras git-credential-github-apps
  oci-index:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - docker
      - oras
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # https://github.com/orgs/community/discussions/25768
      - run: |
          mkdir manifests
          for TAG in linux-amd64-{docker,oras}
          do
              oras manifest fetch ghcr.io/hakuyume/git-credential-github-apps:${{ github.sha }}-${TAG} > manifests/${TAG}.json
          done
          python oci-index.py \
                 manifests/linux-amd64-{docker,oras}.json:linux/amd64 |
              oras manifest push ghcr.io/hakuyume/git-credential-github-apps:${{ github.sha }},latest -
          python oci-index.py \
                 manifests/linux-amd64-oras.json:linux/amd64 |
              oras manifest push ghcr.io/hakuyume/git-credential-github-apps:${{ github.sha }}-oras,oras -
  action:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - oci-index
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          app-id: 810689
          private-key: ${{ sercets.PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          repository: https://github.com/Hakuyume/sandbox-private.git
          path: sandbox-http
      - uses: actions/checkout@v4
        with:
          repository: git@github.com:Hakuyume/sandbox-private.git
          path: sandbox-git
